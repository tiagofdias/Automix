@using System.Runtime.Serialization.Formatters.Binary
@using System.Text
@using Newtonsoft.Json
@model Automix.Models.Domain.UpdateAlunoViewModel

@{

}

<h1>Atualizar Aluno</h1>

<hr/>

<div class="row">
    <div class="col-md-4">
        <form asp-action="Update" method="post" id="result" enctype="multipart/form-data"> 
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
             <div>
                Foto
                <img style="float:right; border-radius: 50%; object-fit: cover;" id="imagem"  width="150" height="150" alt="Imagem" src="@ViewBag.imgSrc"/>
                <br />
                <label for="Foto" type="file" class="btn btn-outline-primary" style="width: 100%; text-decoration:none; color: inherit;">Atualizar Foto</label>
                <input asp-for="Foto" id="Foto" type="file" style="display:none; width: 25%"/>
            </div> 
            <div class="form-group">
                <input asp-for="IDAluno" type="hidden" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="NIFAluno" class="control-label"></label>
                <input asp-for="NIFAluno" class="form-control" />
                <span asp-validation-for="NIFAluno" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Nome" class="control-label"></label>
                <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Morada" class="control-label"></label>
                <input asp-for="Morada" class="form-control" />
                <span asp-validation-for="Morada" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Localidade" class="control-label"></label>
                <input asp-for="Localidade" class="form-control" />
                <span asp-validation-for="Localidade" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CodigoPostal" class="control-label"></label>
                <input asp-for="CodigoPostal" class="form-control" />
                <span asp-validation-for="CodigoPostal" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Contacto" class="control-label"></label>
                <input asp-for="Contacto" class="form-control" />
                <span asp-validation-for="Contacto" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ContactoAlternativo" class="control-label">Contacto Alternativo</label>
                <input asp-for="ContactoAlternativo" class="form-control" />
                <span asp-validation-for="ContactoAlternativo" class="text-danger"></span>
            </div>
             <div class="form-group">
                    Atestado Médico Atual - @Model.NomeDocumento 
                <input asp-for="Documento" type="file" accept="application/pdf" class="form-control" />
                <span asp-validation-for="Documento" class="text-danger"></span>
            </div> 
                <td>
               
            </td>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
 function readURL(input) {
    if (input.files && input.files[0]) {
        var reader = new FileReader();

        reader.onload = function (e) {
            $('#imagem').attr('src', e.target.result);
        }

        reader.readAsDataURL(input.files[0]);
    }
}

$("#Foto").change(function(){
    readURL(this);
});
</script>

@*<script>
    document.querySelector('input').addEventListener('change', function() {

  var reader = new FileReader();
  reader.onload = function() {

    var arrayBuffer = this.result,
      array = new Uint8Array(arrayBuffer),
      binaryString = String.fromCharCode.apply(null, array);

    console.log(binaryString);

  }
  reader.readAsArrayBuffer(this.files[0]);

}, false);
</script>*@

}
